# 開始位置と取得数を指定
a = [1, 2, 3, 4, 5]
p a[1, 3] #=> [2, 3, 4]

# 取得したい要素数を複数指定できる
p a.value_at(0, 2, 4) #=> [0, 2, 4]

# 最後の要素を取得
p a[a.size -1]
p a[-1]
p a.last

p a.last(2) #=> 4
p a[-2, 2] #=> [4, 5]

p a.first #=> 1
p a.first(2) #=> [1, 2]

# 指定した複数の要素を1つの要素に置き換える
a[1, 3] = 100
p a #=> [1, 100, 5]

# 要素を追加する
a.push(2)

# 指定した値を削除する
a.delete(2)

# 配列の連結(破壊的メソッド)
a = [1]
b = [2, 3]
p a + b #=> [1, 2, 3]
a.concat(b) #=> [1, 2, 3]

# 配列の集合演算
a = [1, 2, 3]
b = [3, 4, 5]
p a | b #=> [1, 2, 3, 4, 5]
p a - b #=> [1, 2]
p a & b #=> [3]

require 'set'
a = Set.new(a)
b = Set.new(b)
p a | b #=> <Set: {1, 2, 3, 4, 5}>

# 多重代入で余った要素を配列で受け取る
e, *f = 100, 200, 300
p f #=> [200, 300]

# 1つの配列を複数の引数として展開する(splat展開)
a = []
b = [2, 3]
a.push(1)
a.push(b)
p a #=> [1, [2, 3]]

a = []
a.push(1)
a.push(*b)
p a #=> [1, 2, 3]

# 配列の初期値指定
a = Array.new(5) { 'default' }